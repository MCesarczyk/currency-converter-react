{"version":3,"sources":["images/background.png","App/Container/styled.js","App/Container/index.js","App/Form/Clock/useCurrentDate.js","App/Form/Clock/styled.js","App/Form/Clock/index.js","App/Form/Buttons/styled.js","App/Form/Buttons/index.js","App/Form/currencies.js","App/Form/styled.js","App/Form/index.js","App/Form/useCurrentRates.js","App/App.js","reportWebVitals.js","GlobalStyle.js","index.js","theme.js"],"names":["ContainerBody","styled","div","background","ContainerElement","theme","breakpoint","mobileMax","Container","children","useCurrentDate","useState","Date","date","setDate","useEffect","clockInterval","setInterval","clearInterval","toLocaleString","undefined","weekday","day","month","hour","minute","second","ClockContainer","ClockElement","p","Clock","customDate","ButtonsContainer","Button","button","color","elementsText","elementsBackground","Buttons","type","currencies","id","rate","label","checked","Fieldset","fieldset","Legend","legend","InputLabel","InputLabelText","span","FormInput","input","List","ul","ListItem","li","ListLabel","FormResult","FormAnnotation","Form","title","inputTitle","listTitle","resultTitle","resultLabel","ratesData","status","base","rates","setRatesData","setTimeout","request","XMLHttpRequest","open","requestURL","responseType","onerror","onload","response","send","useCurrentRates","checkingDate","setCheckingDate","chosenCurrency","setChosenCurrency","newAmount","setNewAmount","result","setResult","inputRef","useRef","onCurrencyChange","target","value","getExchangeRate","find","filteredRates","wantedCurrencies","map","Object","fromEntries","entries","filter","includes","filterRatesObject","onSubmit","event","preventDefault","toFixed","current","focus","onReset","ref","placeholder","min","step","required","autoFocus","onChange","keys","key","name","htmlFor","findIndex","values","readOnly","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAAe,MAA0B,uCCG5BA,EAAgBC,IAAOC,IAAV,0OAGGC,GAOhBC,EAAmBH,IAAOC,IAAV,0HACZ,qBAAGG,MAAkBC,WAAWC,a,OCJlCC,EARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,cAACT,EAAD,UACI,cAACI,EAAD,UACKK,O,OCHAC,EAAiB,WAC1B,MAAwBC,mBAAS,IAAIC,MAArC,mBAAOC,EAAP,KAAaC,EAAb,KAyBA,OAnBAC,qBAAU,WACN,IAAMC,EAAgBC,aAAY,WAJlCH,EAAQ,IAAIF,QAMT,KAEH,OAAO,WACHM,cAAcF,MAEnB,IAEgBH,EAAKM,oBAAeC,EAAW,CAC9CC,QAAS,OACTC,IAAK,UACLC,MAAO,OACPC,KAAM,UACNC,OAAQ,UACRC,OAAQ,aCvBHC,EAAiB1B,IAAOC,IAAV,8GAMd0B,EAAe3B,IAAO4B,EAAV,iICUVC,EAfD,WAEV,IAAMC,EAAarB,IAEnB,OACI,cAACiB,EAAD,UACI,eAACC,EAAD,0BAEK,IACAG,QCVJC,EAAmB/B,IAAOC,IAAV,6LAIJ,qBAAGG,MAAkBC,WAAWC,aAM5C0B,EAAShC,IAAOiC,OAAV,iWAEN,qBAAG7B,MAAkB8B,MAAMC,gBAChB,qBAAG/B,MAAkB8B,MAAME,sBCFpCC,EAXC,kBACZ,eAACN,EAAD,WACI,cAACC,EAAD,uBAGA,cAACA,EAAD,CAAQM,KAAK,QAAb,6CC2BOC,EAlCI,CACf,CACIC,GAAI,MACJC,KAAM,OACNC,MAAO,OACPC,SAAS,GAEb,CACIH,GAAI,MACJC,KAAM,OACNC,MAAO,0BAEX,CACIF,GAAI,MACJC,KAAM,OACNC,MAAO,sBAEX,CACIF,GAAI,MACJC,KAAM,OACNC,MAAO,sBAEX,CACIF,GAAI,MACJC,KAAM,MACNC,MAAO,kBAEX,CACIF,GAAI,MACJC,KAAM,WACNC,MAAO,YC5BFE,EAAW5C,IAAO6C,SAAV,6FAMRC,EAAS9C,IAAO+C,OAAV,6KACN,qBAAG3C,MAAkB8B,MAAMC,gBAChB,qBAAG/B,MAAkB8B,MAAME,sBAOtCY,EAAahD,IAAO0C,MAAV,iMAME,qBAAGtC,MAAkBC,WAAWC,aAK5C2C,EAAiBjD,IAAOkD,KAAV,mDAIdC,EAAYnD,IAAOoD,MAAV,+KAMG,qBAAGhD,MAAkBC,WAAWC,aAK5C+C,EAAOrD,IAAOsD,GAAV,iGAMJC,EAAWvD,IAAOwD,GAAV,mMAII,qBAAGpD,MAAkBC,WAAWC,aAM5CmD,EAAYzD,IAAO0C,MAAV,+FAMTgB,EAAa1D,IAAO4B,EAAV,oDAIV+B,EAAiB3D,IAAO4B,EAAV,0ECgGZgC,EAlJF,SAAC,GAMP,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,YACAC,EACI,EADJA,YAEMC,ECxBuB,WAC3B,MAAkCxD,mBAAS,CACvCyD,OAAQ,UACRC,KAAM,MACNxD,KAAM,KACNyD,MAAO,OAJX,mBAAOH,EAAP,KAAkBI,EAAlB,KA8BA,OAvBAxD,qBAAU,WAoBNyD,YAnBiB,WACb,IAAMC,EAAU,IAAIC,eAGpBD,EAAQE,KAAK,MAAOC,6CAAwBT,EAAUE,MACtDI,EAAQI,aAAe,OAEvBJ,EAAQK,QAAU,WACdP,EAAa,CAAEH,OAAQ,WAG3BK,EAAQM,OAAS,WACb,MAAwBN,EAAQO,SAAxBnE,EAAR,EAAQA,KAAMyD,EAAd,EAAcA,MACdC,EAAa,CAAEH,OAAQ,UAAWvD,OAAMyD,WAG5CG,EAAQQ,KAAK,QAGI,OACtB,IAEId,EDPSe,GAEZd,EAASD,EAAUC,OACnBvD,EAAOsD,EAAUtD,KACjByD,EAAQH,EAAUG,MAExB,EAAwC3D,mBAAS,IAAjD,mBAAOwE,EAAP,KAAqBC,EAArB,KAEA,EAA4CzE,mBAAS,OAArD,mBAAO0E,EAAP,KAAuBC,EAAvB,KAEA,EAAkC3E,mBAAS,IAA3C,mBAAO4E,EAAP,KAAkBC,EAAlB,KAEA,EAA4B7E,mBAAS,IAArC,mBAAO8E,EAAP,KAAeC,EAAf,KAEMC,EAAWC,iBAAO,MAElBC,EAAmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1BR,EAAkBQ,EAAOC,QAGrBC,EAAkB,WACtB,OAAQxD,EAAWyD,MAAK,qBAAGxD,KAAgB4C,KAAgB3C,MA2BzDwD,EAAgB,KAYpB,OAV0B,WACxB,GAAI5B,EAAO,CACT,IAAM6B,EAAmB3D,EAAW4D,KAAI,qBAAG3D,MAC3CyD,EAAgBG,OAAOC,YAAYD,OAAOE,QAAQjC,GAAOkC,QACvD,gBAAE/D,EAAF,2BAAU0D,EAAiBM,SAAShE,QAI1CiE,GAGE,uBAAMC,SAjCa,SAACC,GACpBA,EAAMC,iBAENb,IANAN,EAAU,EAAEH,EAAYS,KAAmBc,QAAQ,GAAI,IAAKzB,IAQ5DG,EAAa,IACbJ,EAAgB,qBAAD,OAAsBvE,IACrC8E,EAASoB,QAAQC,SA0BaC,QAvBZ,SAACL,GACnBA,EAAMC,iBAENrB,EAAa,IACbE,EAAU,IACVN,EAAgB,IAChBE,EAAkB,OAClBK,EAASoB,QAAQC,SAgBjB,UACE,eAACnE,EAAD,WACE,cAACE,EAAD,UAASgB,IACT,cAAC,EAAD,IACA,eAACd,EAAD,WACE,cAACC,EAAD,UACGY,IAEH,cAACV,EAAD,CACE8D,IAAKvB,EACLI,MAAOR,EACP4B,YAAY,cACZ5E,KAAK,SACL6E,IAAI,OACJC,KAAK,MACLC,UAAQ,EACRC,WAAS,EACTC,SAAU,gBAAG1B,EAAH,EAAGA,OAAH,OAAgBN,EAAaM,EAAOC,gBAIpD,eAAClD,EAAD,WACE,cAACE,EAAD,UAASiB,IACG,UAAXI,EACC,iGAIc,YAAXA,EACH,yDAIA,cAACd,EAAD,UACG+C,OAAOoB,KAAKvB,GAAeE,KAAI,SAACsB,EAAK3B,GAAN,OAC9B,eAACvC,EAAD,WACE,gCACE,uBACEjB,KAAK,QACLoF,KAAK,iBACLlF,GAAIiF,EACJ3B,MAAO2B,EACP9E,QAASyC,IAAmBqC,EAC5BF,SAAU3B,IAEZ,cAACnC,EAAD,CAAWkE,QAASF,EAApB,SACGlF,EAAWA,EAAWqF,WAAU,qBAAGpF,KAAgBiF,MAAM/E,WAG9D,cAACS,EAAD,CACE2C,OAAQ,EAAKM,OAAOyB,OAAO5B,GAAeH,IAASe,QAAQ,GAC3DvE,KAAK,SACL6E,IAAI,SACJC,KAAK,SACLC,UAAQ,EACRS,UAAQ,MApBGL,WA4BvB,eAAC7E,EAAD,WACE,cAACE,EAAD,UAASkB,IACT,eAACN,EAAD,WACGO,EACAuB,KAEH,cAAC7B,EAAD,UACGuB,IAEH,cAAC,EAAD,WE7IO6C,I,EAAAA,EAff,WAEE,OACE,cAAC,EAAD,UACE,cAAC,EAAD,CACEjE,WAAW,WACXD,MAAM,iBACNE,UAAU,gBACVC,YAAY,kBACZC,YAAY,mBCAL+D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCLDQ,EAAcC,YAAH,iSCMxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAezI,MCVE,CACjB8B,MAAO,CACHC,aAAc,UACdC,mBAAoB,WAExB/B,WAAY,CACRC,UAAW,UDIf,UACE,cAACmI,EAAD,IACA,cAAC,EAAD,SAGJK,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.97db110d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.33e64e6f.png\";","import styled from \"styled-components\";\r\nimport background from \"../../images/background.png\";\r\n\r\nexport const ContainerBody = styled.div`\r\n    max-width: 1024px;\r\n    margin: 0 auto;\r\n    background-image: url(\"${background}\");\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-color: #ddd;\r\n    background-attachment: fixed;\r\n`;\r\n\r\nexport const ContainerElement = styled.div`\r\n    max-width: ${({ theme }) => theme.breakpoint.mobileMax};\r\n    min-width: 240px;\r\n    margin: 0 auto;\r\n    background-color: #eee;\r\n`;","import { ContainerBody, ContainerElement } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <ContainerBody>\r\n        <ContainerElement>\r\n            {children}\r\n        </ContainerElement>\r\n    </ContainerBody>\r\n);\r\n\r\nexport default Container;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    const getDate = () => {\r\n        setDate(new Date());\r\n    };\r\n\r\n    useEffect(() => {\r\n        const clockInterval = setInterval(() => {\r\n            getDate();\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(clockInterval);\r\n        };\r\n    }, []);\r\n\r\n    const customDate = date.toLocaleString(undefined, {\r\n        weekday: \"long\",\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        second: \"2-digit\"\r\n    });\r\n\r\n    return customDate;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const ClockContainer = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nexport const ClockElement = styled.p`\r\n    font-family: monospace;\r\n    font-size: 12px;\r\n    margin: 0 0 24px 0;\r\n    text-align: center;\r\n`;","import { useCurrentDate } from \"./useCurrentDate\";\r\nimport { ClockContainer, ClockElement } from \"./styled\";\r\n\r\nconst Clock = () => {\r\n\r\n    const customDate = useCurrentDate();\r\n\r\n    return (\r\n        <ClockContainer>\r\n            <ClockElement>\r\n                Dzisiaj jest\r\n                {\" \"}\r\n                {customDate}\r\n            </ClockElement>\r\n        </ClockContainer>\r\n    );\r\n};\r\n\r\nexport default Clock;","import styled from \"styled-components\";\r\n\r\nexport const ButtonsContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}) {\r\n            flex-direction: column;\r\n            align-items: center;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    min-width: 165px;\r\n    color: ${({ theme }) => theme.color.elementsText};\r\n    background-color: ${({ theme }) => theme.color.elementsBackground};\r\n    display: inline-block;\r\n    border-radius: 20px;\r\n    padding: 5px 10px;\r\n    margin: 10px;\r\n    width: 45%;\r\n\r\n    &:hover {\r\n        background-color: hsl(210, 40%, 30%);\r\n    }\r\n\r\n    &:active {\r\n        background-color: hsl(210, 40%, 40%);\r\n    }\r\n`;","import { ButtonsContainer, Button } from \"./styled\";\r\n\r\nconst Buttons = () => (\r\n    <ButtonsContainer>\r\n        <Button>\r\n            Przelicz\r\n        </Button>\r\n        <Button type=\"reset\">\r\n            Wyczyść formularz\r\n        </Button>\r\n    </ButtonsContainer>\r\n);\r\n\r\nexport default Buttons;","const currencies = [\r\n    {\r\n        id: \"EUR\",\r\n        rate: 4.5302,\r\n        label: \"Euro\",\r\n        checked: true,\r\n    },\r\n    {\r\n        id: \"USD\",\r\n        rate: 3.7986,\r\n        label: \"Dolar amerykański\"\r\n    },\r\n    {\r\n        id: \"AUD\",\r\n        rate: 2.8779,\r\n        label: \"Dolar australijski\"\r\n    },\r\n    {\r\n        id: \"BGN\",\r\n        rate: 2.3162,\r\n        label: \"Lew bułgarski\"\r\n    },\r\n    {\r\n        id: \"HRK\",\r\n        rate: 0.6041,\r\n        label: \"Kuna chorwacka\"\r\n    },\r\n    {\r\n        id: \"BTC\",\r\n        rate: 1299111.81,\r\n        label: \"Bitcoin\"\r\n    }\r\n];\r\n\r\nexport default currencies;","import styled from \"styled-components\";\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    border-radius: 20px;\r\n    padding: 10px;\r\n    margin: 10px;\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    color: ${({ theme }) => theme.color.elementsText};\r\n    background-color: ${({ theme }) => theme.color.elementsBackground};\r\n    padding: 8px 24px;\r\n    border-style: none;\r\n    border-radius: 20px;\r\n    text-align: center;\r\n`;\r\n\r\nexport const InputLabel = styled.label`\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const InputLabelText = styled.span`\r\n    min-width: 100px;\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n    width: 40%;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    height: 24px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}) {\r\n        width: 80%;\r\n    }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    line-height: 1.75;\r\n    padding-left: 0;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}) {\r\n            flex-direction: column;\r\n            align-items: center;\r\n    }\r\n`;\r\n\r\nexport const ListLabel = styled.label`\r\n    width: 150px;\r\n    display: inline-block;\r\n    margin: 0 5px;\r\n`;\r\n\r\nexport const FormResult = styled.p`\r\n    margin-left: 20px;\r\n`;\r\n\r\nexport const FormAnnotation = styled.p`\r\n    font-size: 12px;\r\n    text-align: right;\r\n`;","import { useRef, useState } from \"react\";\r\nimport { useCurrentRates } from \"./useCurrentRates\";\r\nimport Clock from \"./Clock\";\r\nimport Buttons from \"./Buttons\";\r\nimport currencies from \"./currencies\";\r\n\r\nimport {\r\n  Fieldset,\r\n  Legend,\r\n  InputLabel,\r\n  InputLabelText,\r\n  FormInput,\r\n  List,\r\n  ListItem,\r\n  ListLabel,\r\n  FormResult,\r\n  FormAnnotation\r\n} from \"./styled\";\r\n\r\nconst Form = ({\r\n  title,\r\n  inputTitle,\r\n  listTitle,\r\n  resultTitle,\r\n  resultLabel\r\n}) => {\r\n  const ratesData = useCurrentRates();\r\n\r\n  const status = ratesData.status;\r\n  const date = ratesData.date;\r\n  const rates = ratesData.rates;\r\n\r\n  const [checkingDate, setCheckingDate] = useState(\"\");\r\n\r\n  const [chosenCurrency, setChosenCurrency] = useState(\"EUR\");\r\n\r\n  const [newAmount, setNewAmount] = useState(\"\");\r\n\r\n  const [result, setResult] = useState([]);\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const onCurrencyChange = ({ target }) => {\r\n    setChosenCurrency(target.value);\r\n  };\r\n\r\n  const getExchangeRate = () => {\r\n    return (currencies.find(({ id }) => id === chosenCurrency).rate);\r\n  };\r\n\r\n  const calculateResult = () => {\r\n    setResult([(newAmount / getExchangeRate()).toFixed(2), \" \", chosenCurrency]);\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    getExchangeRate();\r\n    calculateResult();\r\n    setNewAmount(\"\");\r\n    setCheckingDate(`*wg kursu z dnia: ${date}`);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const onFormReset = (event) => {\r\n    event.preventDefault();\r\n\r\n    setNewAmount(\"\");\r\n    setResult(\"\");\r\n    setCheckingDate(\"\");\r\n    setChosenCurrency(\"EUR\");\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  let filteredRates = null;\r\n\r\n  const filterRatesObject = () => {\r\n    if (rates) {\r\n      const wantedCurrencies = currencies.map(({ id }) => id);\r\n      filteredRates = Object.fromEntries(Object.entries(rates).filter(\r\n        ([id]) => wantedCurrencies.includes(id)));\r\n    };\r\n  };\r\n\r\n  filterRatesObject();\r\n\r\n  return (\r\n    <form onSubmit={onFormSubmit} onReset={onFormReset}>\r\n      <Fieldset>\r\n        <Legend>{inputTitle}</Legend>\r\n        <Clock />\r\n        <InputLabel>\r\n          <InputLabelText>\r\n            {title}\r\n          </InputLabelText>\r\n          <FormInput\r\n            ref={inputRef}\r\n            value={newAmount}\r\n            placeholder=\"Kwota w PLN\"\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"any\"\r\n            required\r\n            autoFocus\r\n            onChange={({ target }) => setNewAmount(target.value)}\r\n          />\r\n        </InputLabel>\r\n      </Fieldset>\r\n      <Fieldset>\r\n        <Legend>{listTitle}</Legend>\r\n        {status === \"error\" ? (\r\n          <div>\r\n            Unable to fetch data...\r\n            please check your internet connection.\r\n          </div>\r\n        ) : (status === \"loading\" ? (\r\n          <div>\r\n            Loading... please wait\r\n          </div>\r\n        ) : (\r\n          <List>\r\n            {Object.keys(filteredRates).map((key, value) => (\r\n              <ListItem key={key} >\r\n                <div>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"chosenCurrency\"\r\n                    id={key}\r\n                    value={key}\r\n                    checked={chosenCurrency === key}\r\n                    onChange={onCurrencyChange}\r\n                  />\r\n                  <ListLabel htmlFor={key}>\r\n                    {currencies[currencies.findIndex(({ id }) => id === key)].label}\r\n                  </ListLabel>\r\n                </div>\r\n                <FormInput\r\n                  value={(1 / (Object.values(filteredRates)[value])).toFixed(4)}\r\n                  type=\"number\"\r\n                  min=\"0.0001\"\r\n                  step=\"0.0001\"\r\n                  required\r\n                  readOnly\r\n                />\r\n              </ListItem>\r\n            ))\r\n            }\r\n          </List>\r\n        ))}\r\n      </Fieldset>\r\n      <Fieldset>\r\n        <Legend>{resultTitle}</Legend>\r\n        <FormResult>\r\n          {resultLabel}\r\n          {result}\r\n        </FormResult>\r\n        <FormAnnotation>\r\n          {checkingDate}\r\n        </FormAnnotation>\r\n        <Buttons />\r\n      </Fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useCurrentRates = () => {\r\n    const [ratesData, setRatesData] = useState({\r\n        status: \"loading\",\r\n        base: \"PLN\",\r\n        date: null,\r\n        rates: null\r\n    });\r\n\r\n    useEffect(() => {\r\n        const getRates = () => {\r\n            const request = new XMLHttpRequest();\r\n            const requestURL = 'https://api.exchangerate.host/latest';\r\n\r\n            request.open('GET', requestURL + \"?base=\" + ratesData.base);\r\n            request.responseType = 'json';\r\n\r\n            request.onerror = () => {\r\n                setRatesData({ status: \"error\" });\r\n            };\r\n\r\n            request.onload = () => {\r\n                const { date, rates } = request.response;\r\n                setRatesData({ status: \"success\", date, rates });\r\n            };\r\n\r\n            request.send(null);\r\n        };\r\n\r\n        setTimeout(getRates, 2_000);\r\n    }, []);\r\n\r\n    return ratesData;\r\n};","import Container from \"./Container\";\nimport Form from \"./Form\";\n\nfunction App() {\n\n  return (\n    <Container>\n      <Form\n        inputTitle=\"e-kantor\"\n        title=\"Wpłacasz:\"\n        listTitle=\"Aktualny kurs\"\n        resultTitle=\"Otrzymana kwota\"\n        resultLabel=\"Dostajesz: \"\n      />\n    </Container>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::after, ::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  font-family: 'Ubuntu', sans-serif;\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-color: #ddd;\r\n  background-attachment: fixed;\r\n}`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './GlobalStyle';\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    color: {\r\n        elementsText: \"#ebe6dc\",\r\n        elementsBackground: \"#133246\",\r\n    },\r\n    breakpoint: {\r\n        mobileMax: \"480px\",\r\n    },\r\n}"],"sourceRoot":""}