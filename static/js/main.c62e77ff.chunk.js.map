{"version":3,"sources":["images/background.png","App/Container/styled.js","App/Container/index.js","App/Form/Clock/styled.js","App/Form/Clock/index.js","App/Form/Clock/useCurrentDate.js","App/Form/Buttons/styled.js","App/Form/Buttons/index.js","App/Form/currencies.js","App/Form/styled.js","App/Form/index.js","App/Form/useCurrentRates.js","App/Switcher/styled.js","App/Switcher/index.js","App/languages.js","App/App.js","App/useLocalStorageState.js","reportWebVitals.js","GlobalStyle.js","index.js","theme.js"],"names":["ContainerBody","styled","div","background","theme","color","ContainerElement","innerContainerBackground","Container","children","ClockContainer","ClockElement","p","Clock","languages","language","date","useState","Date","setDate","useEffect","clockInterval","setInterval","clearInterval","useCurrentDate","clockLabel","toLocaleString","weekday","day","month","hour","minute","second","ButtonsContainer","breakpoint","mobileMax","Button","button","elementsText","elementsBackground","Buttons","mainButtonLabel","type","resetButtonLabel","currencies","id","rate","label","EN","PL","checked","Fieldset","fieldset","Legend","legend","InputLabel","InputLabelText","span","FormInput","input","List","ul","ListItem","li","ListLabel","FormResult","FormAnnotation","Form","headerTitle","inputLabel","listTitle","resultTitle","resultLabel","ratesData","status","base","rates","setRatesData","setTimeout","a","fetch","requestURL","response","ok","Error","json","useCurrentRates","checkingDate","setCheckingDate","chosenCurrency","setChosenCurrency","newAmount","setNewAmount","result","setResult","inputRef","useRef","onCurrencyChange","target","value","getExchangeRate","find","filteredRates","wantedCurrencies","map","Object","fromEntries","entries","filter","includes","filterRatesObject","onSubmit","event","preventDefault","toFixed","dateLabel","current","focus","onReset","ref","placeholder","inputPlaceholder","min","step","required","autoFocus","onChange","loadingMessage","errorMessage","keys","key","name","htmlFor","findIndex","values","LanguageButtons","Switcher","setLanguage","onLanguageChange","onClick","App","keyName","initialValue","localStorage","getItem","JSON","parse","state","setState","setItem","stringify","useLocalStorageState","document","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c62e77ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.33e64e6f.png\";","import styled from \"styled-components\";\r\nimport background from \"../../images/background.png\";\r\n\r\nexport const ContainerBody = styled.div`\r\n    background-image: url(\"${background}\");\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-color: ${({ theme }) => theme.color.background};\r\n    background-attachment: fixed;\r\n`;\r\n\r\nexport const ContainerElement = styled.div`\r\n    max-width: 360px;\r\n    min-width: 240px;\r\n    margin: 0 auto;\r\n    padding: 10px;\r\n    background-color: ${({ theme }) => theme.color.innerContainerBackground};\r\n`;","import { ContainerBody, ContainerElement } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <ContainerBody>\r\n        <ContainerElement>\r\n            {children}\r\n        </ContainerElement>\r\n    </ContainerBody>\r\n);\r\n\r\nexport default Container;","import styled from \"styled-components\";\r\n\r\nexport const ClockContainer = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nexport const ClockElement = styled.p`\r\n    font-family: monospace;\r\n    font-size: 12px;\r\n    margin: 0 0 24px 0;\r\n    text-align: center;\r\n`;","import { useCurrentDate } from \"./useCurrentDate\";\r\nimport { ClockContainer, ClockElement } from \"./styled\";\r\n\r\nconst Clock = ({ languages, language }) => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <ClockContainer>\r\n            <ClockElement>\r\n                {languages[language].clockLabel}\r\n                {\" \"}\r\n                {date.toLocaleString(language, {\r\n                    weekday: \"long\",\r\n                    day: \"numeric\",\r\n                    month: \"long\",\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                    second: \"2-digit\"\r\n                })}\r\n            </ClockElement>\r\n        </ClockContainer>\r\n    );\r\n};\r\n\r\nexport default Clock;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const clockInterval = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(clockInterval);\r\n        };\r\n    }, []);\r\n\r\n    return date;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const ButtonsContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}) {\r\n            flex-direction: column;\r\n            align-items: center;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    color: ${({ theme }) => theme.color.elementsText};\r\n    background-color: ${({ theme }) => theme.color.elementsBackground};\r\n    display: inline-block;\r\n    border-radius: 20px;\r\n    padding: 5px 10px;\r\n    margin: 5px 10px;\r\n    width: 45%;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}) {\r\n        width: 100%;\r\n    }\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n`;","import { ButtonsContainer, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ languages, language }) => (\r\n    <ButtonsContainer>\r\n        <Button>\r\n            {languages[language].mainButtonLabel}\r\n        </Button>\r\n        <Button type=\"reset\">\r\n            {languages[language].resetButtonLabel}\r\n        </Button>\r\n    </ButtonsContainer>\r\n);\r\n\r\nexport default Buttons;","const currencies = [\r\n    {\r\n        id: \"EUR\",\r\n        rate: 4.5302,\r\n        label: {\r\n            EN: \"Euro\",\r\n            PL: \"Euro\"\r\n        },\r\n        checked: true\r\n    },\r\n    {\r\n        id: \"USD\",\r\n        rate: 3.7986,\r\n        label: {\r\n            EN: \"American dollar\",\r\n            PL: \"Dolar amerykański\"\r\n        }\r\n    },\r\n    {\r\n        id: \"AUD\",\r\n        rate: 2.8779,\r\n        label: {\r\n            EN: \"Australian dollar\",\r\n            PL: \"Dolar australijski\"\r\n        }\r\n    },\r\n    {\r\n        id: \"BGN\",\r\n        rate: 2.3162,\r\n        label: {\r\n            EN: \"Bulgarian lev\",\r\n            PL: \"Lew bułgarski\"\r\n        }\r\n    },\r\n    {\r\n        id: \"HRK\",\r\n        rate: 0.6041,\r\n        label: {\r\n            EN: \"Croatian kuna\",\r\n            PL: \"Kuna chorwacka\"\r\n        }\r\n    }\r\n];\r\n\r\nexport default currencies;","import styled from \"styled-components\";\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    border-radius: 20px;\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    color: ${({ theme }) => theme.color.elementsText};\r\n    background-color: ${({ theme }) => theme.color.elementsBackground};\r\n    padding: 8px 24px;\r\n    border-style: none;\r\n    border-radius: 20px;\r\n    text-align: center;\r\n`;\r\n\r\nexport const InputLabel = styled.label`\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const InputLabelText = styled.span`\r\n    min-width: 100px;\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n    width: 50%;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    height: 24px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}) {\r\n        width: 80%;\r\n    }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    line-height: 1.75;\r\n    padding-left: 0;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n`;\r\n\r\nexport const ListLabel = styled.label`\r\n    width: 150px;\r\n    display: inline-block;\r\n    margin: 0 5px;\r\n`;\r\n\r\nexport const FormResult = styled.p`\r\n    margin-left: 20px;\r\n`;\r\n\r\nexport const FormAnnotation = styled.p`\r\n    font-size: 12px;\r\n    text-align: right;\r\n`;","import { useRef, useState } from \"react\";\r\nimport { useCurrentRates } from \"./useCurrentRates\";\r\nimport Clock from \"./Clock\";\r\nimport Buttons from \"./Buttons\";\r\nimport currencies from \"./currencies\";\r\n\r\nimport {\r\n  Fieldset,\r\n  Legend,\r\n  InputLabel,\r\n  InputLabelText,\r\n  FormInput,\r\n  List,\r\n  ListItem,\r\n  ListLabel,\r\n  FormResult,\r\n  FormAnnotation\r\n} from \"./styled\";\r\n\r\nconst Form = ({\r\n  languages,\r\n  language,\r\n  headerTitle,\r\n  inputLabel,\r\n  listTitle,\r\n  resultTitle,\r\n  resultLabel\r\n}) => {\r\n  const ratesData = useCurrentRates();\r\n  const status = ratesData.status;\r\n  const date = ratesData.date;\r\n  const rates = ratesData.rates;\r\n  const [checkingDate, setCheckingDate] = useState(\"\");\r\n  const [chosenCurrency, setChosenCurrency] = useState(\"EUR\");\r\n  const [newAmount, setNewAmount] = useState(\"\");\r\n  const [result, setResult] = useState([]);\r\n  const inputRef = useRef(null);\r\n\r\n  const onCurrencyChange = ({ target }) => {\r\n    setChosenCurrency(target.value);\r\n  };\r\n\r\n  const getExchangeRate = () => {\r\n    return currencies.find(({ id }) => id === chosenCurrency).rate;\r\n  };\r\n\r\n  const calculateResult = () => {\r\n    setResult([(newAmount / getExchangeRate()).toFixed(2), \" \", chosenCurrency]);\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    getExchangeRate();\r\n    calculateResult();\r\n    setNewAmount(\"\");\r\n    setCheckingDate(`${languages[language].dateLabel}${date}`);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const onFormReset = (event) => {\r\n    event.preventDefault();\r\n\r\n    setNewAmount(\"\");\r\n    setResult(\"\");\r\n    setCheckingDate(\"\");\r\n    setChosenCurrency(\"EUR\");\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  let filteredRates = null;\r\n\r\n  const filterRatesObject = () => {\r\n    if (rates) {\r\n      const wantedCurrencies = currencies.map(({ id }) => id);\r\n      filteredRates = Object.fromEntries(Object.entries(rates).filter(\r\n        ([id]) => wantedCurrencies.includes(id)));\r\n    };\r\n  };\r\n\r\n  filterRatesObject();\r\n\r\n  return (\r\n    <form onSubmit={onFormSubmit} onReset={onFormReset}>\r\n      <Fieldset>\r\n        <Legend>{headerTitle}</Legend>\r\n        <Clock \r\n          languages={languages}\r\n          language={language}\r\n        />\r\n        <InputLabel>\r\n          <InputLabelText>\r\n            {inputLabel}\r\n          </InputLabelText>\r\n          <FormInput\r\n            ref={inputRef}\r\n            value={newAmount}\r\n            placeholder={languages[language].inputPlaceholder}\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"any\"\r\n            required\r\n            autoFocus\r\n            onChange={({ target }) => setNewAmount(target.value)}\r\n          />\r\n        </InputLabel>\r\n      </Fieldset>\r\n      <Fieldset>\r\n        <Legend>{listTitle}</Legend>\r\n        {status === \"loading\" ? (\r\n          <div>\r\n            {languages[language].loadingMessage}\r\n          </div>\r\n        ) : (status === \"error\" ? (\r\n          <div>\r\n            {languages[language].errorMessage}\r\n          </div>\r\n        ) : (\r\n          <List>\r\n            {Object.keys(filteredRates).map((key, value) => (\r\n              <ListItem key={key} >\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"chosenCurrency\"\r\n                  id={key}\r\n                  value={key}\r\n                  checked={chosenCurrency === key}\r\n                  onChange={onCurrencyChange}\r\n                />\r\n                <ListLabel htmlFor={key}>\r\n                  {currencies[currencies.findIndex(({ id }) => id === key)].label[language]}\r\n                </ListLabel>\r\n                {(1 / (Object.values(filteredRates)[value])).toFixed(4)}\r\n              </ListItem>\r\n            ))\r\n            }\r\n          </List>\r\n        ))}\r\n      </Fieldset>\r\n      <Fieldset>\r\n        <Legend>{resultTitle}</Legend>\r\n        <FormResult>\r\n          {resultLabel}\r\n          {result}\r\n        </FormResult>\r\n        <FormAnnotation>\r\n          {checkingDate}\r\n        </FormAnnotation>\r\n        <Buttons \r\n          languages={languages}\r\n          language={language}\r\n        />\r\n      </Fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useCurrentRates = () => {\r\n    const [ratesData, setRatesData] = useState({\r\n        status: \"loading\",\r\n        base: \"PLN\",\r\n        date: null,\r\n        rates: null\r\n    });\r\n\r\n    const requestURL = 'https://api.exchangerate.host/latest';\r\n\r\n    useEffect(() => {\r\n        const getRates = async () => {\r\n            try {\r\n                const response = await fetch(requestURL + \"?base=\" + ratesData.base);\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP Error! Status: ${response.status}`);\r\n                }\r\n\r\n                const { base, date, rates } = await response.json();\r\n\r\n                setRatesData({\r\n                    status: \"success\",\r\n                    base: base,\r\n                    date: date,\r\n                    rates: rates\r\n                });\r\n\r\n            } catch (error) {\r\n                setRatesData({ status: \"error\" });\r\n            }\r\n        };\r\n\r\n        setTimeout(getRates, 2_000);\r\n    }, []);\r\n\r\n    return ratesData;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const LanguageButtons = styled.div`\r\n    text-align: right;\r\n`;","import { LanguageButtons } from \"./styled\";\r\n\r\nconst Switcher = ({ languages, setLanguage }) => {\r\n\r\n    const onLanguageChange = ({ target }) => {\r\n        setLanguage(target.value);\r\n    };\r\n\r\n    return (\r\n        <LanguageButtons>\r\n            {Object.keys(languages).map((key) => (\r\n                <button\r\n                    key={key}\r\n                    value={key}\r\n                    onClick={onLanguageChange}\r\n                >\r\n                    {key}\r\n                </button>\r\n            ))}\r\n        </LanguageButtons>\r\n    )\r\n};\r\n\r\nexport default Switcher;","const languages = {\r\n  EN: {\r\n    headerTitle: \"Currency converter\",\r\n    inputLabel: \"You give:\",\r\n    inputPlaceholder: \"Amount in PLN\",\r\n    listTitle: \"Current rate\",\r\n    resultTitle: \"Calculated amount\",\r\n    resultLabel: \"You get: \",\r\n    clockLabel: \"Today is \",\r\n    loadingMessage: \"Loading... please wait\",\r\n    errorMessage: \"Unable to fetch data...\\\r\n    please check your internet connection.\",\r\n    mainButtonLabel: \"Calculate\",\r\n    resetButtonLabel: \"Reset\",\r\n    dateLabel: \"*rate valid on: \"\r\n  },\r\n  PL: {\r\n    headerTitle: \"e-Kantor\",\r\n    inputLabel: \"Wpłacasz:\",\r\n    inputPlaceholder: \"Kwota w PLN\",\r\n    listTitle: \"Aktualny kurs\",\r\n    resultTitle: \"Otrzymana kwota\",\r\n    resultLabel: \"Dostajesz: \",\r\n    clockLabel: \"Dzisiaj jest \",\r\n    loadingMessage: \"Pobieranie danych...\",\r\n    errorMessage: \"Nie udało się pobrać danych...\\\r\n    sprawdź swoje połączenie internetowe\",\r\n    mainButtonLabel: \"Przelicz\",\r\n    resetButtonLabel: \"Wyczyść\",\r\n    dateLabel: \"*wg kursu z dnia: \"\r\n  }\r\n};\r\n\r\nexport default languages;","import Container from \"./Container\";\nimport Form from \"./Form\";\nimport Switcher from \"./Switcher\";\nimport languages from \"./languages\";\nimport { useLocalStorageState } from \"./useLocalStorageState\";\n\nfunction App() {\n\n  const [language, setLanguage] = useLocalStorageState(\"language\", \"EN\");\n\n  document.title = languages[language].headerTitle;\n\n  return (\n    <Container>\n      <Switcher\n        languages={languages}\n        language={language}\n        setLanguage={setLanguage}\n      />\n      <Form\n        languages={languages}\n        language={language}\n        headerTitle={languages[language].headerTitle}\n        inputLabel={languages[language].inputLabel}\n        listTitle={languages[language].listTitle}\n        resultTitle={languages[language].resultTitle}\n        resultLabel={languages[language].resultLabel}\n      />\n    </Container>\n  );\n}\n\nexport default App;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useLocalStorageState = (keyName, initialValue) => {\r\n    const getInitialState = () => {\r\n        const localStorageState = localStorage.getItem(keyName);\r\n        if (localStorageState === null) {\r\n            return initialValue;\r\n        }\r\n\r\n        return JSON.parse(localStorage.getItem(keyName));\r\n    };\r\n    const [state, setState] = useState(getInitialState);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(keyName, JSON.stringify(state))\r\n    }, [state]);\r\n\r\n    return [state, setState];\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::after, ::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  font-family: 'Ubuntu', sans-serif;\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-color: #ddd;\r\n  background-attachment: fixed;\r\n}`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './GlobalStyle';\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    color: {\r\n        background: \"#ddd\",\r\n        innerContainerBackground: \"#eee\",\r\n        elementsText: \"#ebe6dc\",\r\n        elementsBackground: \"#133246\",\r\n    },\r\n    breakpoint: {\r\n        mobileMax: \"480px\",\r\n    },\r\n}"],"sourceRoot":""}