{"version":3,"sources":["App/Container/index.js","App/Form/Clock/index.js","App/Form/Buttons/index.js","App/Form/currencies.js","App/Form/index.js","App/App.js","reportWebVitals.js","index.js"],"names":["Container","children","className","Clock","useState","customDateWithTime","setCustomDateWithTime","getCustomDate","myDate","Date","customDate","toLocaleString","undefined","weekday","day","month","time","toLocaleTimeString","useEffect","clockInterval","setInterval","clearInterval","Buttons","type","currencies","id","rate","label","checked","Form","title","inputTitle","listTitle","resultTitle","list","resultLabel","resultAnnotation","buttons","chosenCurrency","setChosenCurrency","newAmount","setNewAmount","result","setResult","onCurrencyChange","target","value","getExchangeRate","find","onSubmit","event","preventDefault","toFixed","onReset","placeholder","min","step","required","autoFocus","onChange","map","currency","name","defaultChecked","htmlFor","readOnly","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34ba7f2f.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <div className=\"container\">\r\n        <div className=\"container__element\">\r\n            {children}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Container;","import { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Clock = () => {\r\n    const [customDateWithTime, setCustomDateWithTime] = useState(\"\");\r\n\r\n    const getCustomDate = () => {\r\n        const myDate = new Date();\r\n        const customDate = myDate.toLocaleString(\r\n            undefined,\r\n            { weekday: \"long\", day: \"numeric\", month: \"long\", time: \"numeric\" },\r\n        );\r\n        const time = myDate.toLocaleTimeString();\r\n\r\n        setCustomDateWithTime(`Dzisiaj jest ${customDate}, ${time}`);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCustomDate();\r\n        const clockInterval = setInterval(() => {\r\n            getCustomDate();\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(clockInterval);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"form__clockContainer\" >\r\n            <p className=\"form__clockElement\">\r\n                {customDateWithTime}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clock;","import \"./style.css\";\r\n\r\nconst Buttons = () => (\r\n    <div className=\"buttons\">\r\n        <button className=\"buttons__button\">\r\n            Przelicz\r\n        </button>\r\n        <button className=\"buttons__button\" type=\"reset\">\r\n            Wyczyść formularz\r\n        </button>\r\n    </div>\r\n);\r\n\r\nexport default Buttons;","const currencies = [\r\n    {\r\n        id: \"EUR\",\r\n        rate: 4.4723,\r\n        label: \"Euro\",\r\n        checked: true,\r\n    },\r\n    {\r\n        id: \"USD\",\r\n        rate: 3.6759,\r\n        label: \"Dolar amerykański\"\r\n    },\r\n    {\r\n        id: \"AUD\",\r\n        rate: 2.8531,\r\n        label: \"Dolar australijski\"\r\n    },\r\n    {\r\n        id: \"BGN\",\r\n        rate: 2.2866,\r\n        label: \"Lew bułgarski\"\r\n    },\r\n    {\r\n        id: \"HRK\",\r\n        rate: 0.5970,\r\n        label: \"Kuna chorwacka\"\r\n    },\r\n    {\r\n        id: \"BTC\",\r\n        rate: 149548.94,\r\n        label: \"Bitcoin\"\r\n    }\r\n];\r\n\r\nexport default currencies;","import { useState } from \"react\";\r\nimport Clock from \"./Clock\";\r\nimport Buttons from \"./Buttons\";\r\nimport currencies from \"./currencies\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ title, inputTitle, listTitle, list, resultTitle, resultLabel, resultAnnotation, buttons }) => {\r\n    const [chosenCurrency, setChosenCurrency] = useState(\"EUR\");\r\n\r\n    const [newAmount, setNewAmount] = useState(\"\");\r\n\r\n    const [result, setResult] = useState([]);\r\n\r\n    const onCurrencyChange = ({ target }) => {\r\n        setChosenCurrency(target.value);\r\n    };\r\n\r\n    const getExchangeRate = () => {\r\n        return (currencies.find(({ id }) => id === chosenCurrency).rate);\r\n    };\r\n\r\n    const calculateResult = () => {\r\n        setResult([(newAmount / getExchangeRate()).toFixed(2), chosenCurrency]);\r\n    };\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        getExchangeRate();\r\n        calculateResult();\r\n        setNewAmount(\"\");\r\n    };\r\n\r\n    const onFormReset = () => {\r\n        setNewAmount(\"\");\r\n        setResult(\"\");\r\n        setChosenCurrency(\"EUR\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit} onReset={onFormReset}>\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">{inputTitle}</legend>\r\n                <Clock />\r\n                <label className=\"form__inputLabel\">\r\n                    <span className=\"form__inputLabelText\">\r\n                        {title}\r\n                    </span>\r\n                    <input\r\n                        value={newAmount}\r\n                        className=\"form__input\"\r\n                        placeholder=\"Kwota w PLN\"\r\n                        type=\"number\"\r\n                        min=\"0.01\"\r\n                        step=\"any\"\r\n                        required\r\n                        autoFocus\r\n                        onChange={({ target }) => setNewAmount(target.value)}\r\n                    />\r\n                </label>\r\n            </fieldset>\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">{listTitle}</legend>\r\n                {\r\n                    <ul className=\"form__list\">\r\n                        {currencies.map(currency => (\r\n                            <li className=\"form__listItem\" key={currency.id} >\r\n                                <div className=\"form__listInputContainer\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"chosenCurrency\"\r\n                                        id={currency.id}\r\n                                        value={currency.id}\r\n                                        defaultChecked={currency.checked}\r\n                                        onChange={onCurrencyChange}\r\n                                    />\r\n                                    <label\r\n                                        className=\"form__listLabel\"\r\n                                        htmlFor={currency.id}>\r\n                                        {currency.label}\r\n                                    </label>\r\n                                </div>\r\n                                <input\r\n                                    className=\"form__input\"\r\n                                    value={currency.rate.toFixed(4)}\r\n                                    type=\"number\"\r\n                                    min=\"0.0001\"\r\n                                    step=\"0.0001\"\r\n                                    required\r\n                                    readOnly\r\n                                />\r\n                            </li>\r\n                        ))\r\n                        };\r\n                    </ul>\r\n                }\r\n            </fieldset>\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">{resultTitle}</legend>\r\n                <p className=\"form__result\">\r\n                    {resultLabel}\r\n                    {result}\r\n                </p>\r\n                <p className=\"form__annotation\">\r\n                    {resultAnnotation}\r\n                </p>\r\n                <Buttons />\r\n            </fieldset>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Form;","import Container from \"./Container\";\nimport Form from \"./Form\";\n\nfunction App() {\n\n  return (\n    <Container>\n      <Form\n        inputTitle=\"e-kantor\"\n        title=\"Wpłacasz:\"\n        listTitle=\"Aktualny kurs\"\n        resultTitle=\"Otrzymana kwota\"\n        resultLabel=\"Dostajesz:\"\n        resultAnnotation=\"*wg kursu z dnia 12/06/2021\"\n      />\n    </Container>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}