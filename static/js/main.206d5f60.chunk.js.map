{"version":3,"sources":["App/Container/styled.js","App/Container/index.js","App/Form/Clock/useCurrentDate.js","App/Form/Clock/styled.js","App/Form/Clock/index.js","App/Form/Buttons/styled.js","App/Form/Buttons/index.js","App/Form/currencies.js","App/Form/styled.js","App/Form/index.js","App/App.js","reportWebVitals.js","index.js"],"names":["ContainerBody","styled","div","ContainerElement","Container","children","useCurrentDate","useState","Date","date","setDate","useEffect","clockInterval","setInterval","clearInterval","toLocaleString","undefined","weekday","day","month","hour","minute","second","ClockContainer","ClockElement","p","Clock","customDate","ButtonsContainer","Button","button","Buttons","type","currencies","id","rate","label","checked","Fieldset","fieldset","Legend","legend","InputLabel","InputLabelText","span","FormInput","input","List","ul","ListItem","li","ListLabel","FormResult","FormAnnotation","Form","title","inputTitle","listTitle","resultTitle","list","resultLabel","resultAnnotation","buttons","chosenCurrency","setChosenCurrency","newAmount","setNewAmount","result","setResult","inputRef","useRef","onCurrencyChange","target","value","getExchangeRate","find","onSubmit","event","preventDefault","toFixed","current","focus","onReset","ref","placeholder","min","step","required","autoFocus","onChange","map","currency","name","htmlFor","readOnly","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.206d5f60.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ContainerBody = styled.div`\r\n    max-width: 1024px;\r\n    margin: 0 auto;\r\n    background-image: url(\"../../images/6b7c5fa6-b824-4430-b544-2102ad555fd1.png\");\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-color: #ddd;\r\n    background-attachment: fixed;\r\n`;\r\n\r\nexport const ContainerElement = styled.div`\r\n    max-width: 480px;\r\n    min-width: 240px;\r\n    margin: 0 auto;\r\n    background-color: #eee;\r\n`;","import { ContainerBody, ContainerElement } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <ContainerBody>\r\n        <ContainerElement>\r\n            {children}\r\n        </ContainerElement>\r\n    </ContainerBody>\r\n);\r\n\r\nexport default Container;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    const getDate = () => {\r\n        setDate(new Date());\r\n    };\r\n\r\n    useEffect(() => {\r\n        const clockInterval = setInterval(() => {\r\n            getDate();\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(clockInterval);\r\n        };\r\n    }, []);\r\n\r\n    const customDate = date.toLocaleString(undefined, {\r\n        weekday: \"long\",\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        second: \"2-digit\"\r\n    });\r\n\r\n    return customDate;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const ClockContainer = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nexport const ClockElement = styled.p`\r\n    font-family: monospace;\r\n    font-size: 12px;\r\n    margin: 0 0 24px 0;\r\n    text-align: center;\r\n`;","import { useCurrentDate } from \"./useCurrentDate\";\r\nimport { ClockContainer, ClockElement } from \"./styled\";\r\n\r\nconst Clock = () => {\r\n\r\n    const customDate = useCurrentDate();\r\n\r\n    return (\r\n        <ClockContainer>\r\n            <ClockElement>\r\n                Dzisiaj jest\r\n                {\" \"}\r\n                {customDate}\r\n            </ClockElement>\r\n        </ClockContainer>\r\n    );\r\n};\r\n\r\nexport default Clock;","import styled from \"styled-components\";\r\n\r\nexport const ButtonsContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    @media (max-width: 480px) {\r\n            flex-direction: column;\r\n            align-items: center;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    min-width: 165px;\r\n    color: #ebe6dc;\r\n    background-color: #133246;\r\n    display: inline-block;\r\n    border-radius: 5px;\r\n    padding: 5px 10px;\r\n    margin: 10px;\r\n    width: 45%;\r\n\r\n    &:hover {\r\n        background-color: hsl(210, 40%, 30%);\r\n    }\r\n\r\n    &:active {\r\n        background-color: hsl(210, 40%, 40%);\r\n    }\r\n`;","import { ButtonsContainer, Button } from \"./styled\";\r\n\r\nconst Buttons = () => (\r\n    <ButtonsContainer>\r\n        <Button>\r\n            Przelicz\r\n        </Button>\r\n        <Button type=\"reset\">\r\n            Wyczyść formularz\r\n        </Button>\r\n    </ButtonsContainer>\r\n);\r\n\r\nexport default Buttons;","const currencies = [\r\n    {\r\n        id: \"EUR\",\r\n        rate: 4.5302,\r\n        label: \"Euro\",\r\n        checked: true,\r\n    },\r\n    {\r\n        id: \"USD\",\r\n        rate: 3.7986,\r\n        label: \"Dolar amerykański\"\r\n    },\r\n    {\r\n        id: \"AUD\",\r\n        rate: 2.8779,\r\n        label: \"Dolar australijski\"\r\n    },\r\n    {\r\n        id: \"BGN\",\r\n        rate: 2.3162,\r\n        label: \"Lew bułgarski\"\r\n    },\r\n    {\r\n        id: \"HRK\",\r\n        rate: 0.6041,\r\n        label: \"Kuna chorwacka\"\r\n    },\r\n    {\r\n        id: \"BTC\",\r\n        rate: 1299111.81,\r\n        label: \"Bitcoin\"\r\n    }\r\n];\r\n\r\nexport default currencies;","import styled from \"styled-components\";\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    border-radius: 20px;\r\n    padding: 10px;\r\n    margin: 10px;\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    color: #fff;\r\n    background-color: #133246;\r\n    padding: 8px 24px;\r\n    border-style: none;\r\n    border-radius: 20px;\r\n    text-align: center;\r\n`;\r\n\r\nexport const InputLabel = styled.label`\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media (max-width:480px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const InputLabelText = styled.span`\r\n    min-width: 100px;\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n    width: 40%;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    height: 24px;\r\n\r\n    @media (max-width: 480px) {\r\n        width: 80%;\r\n    }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    line-height: 1.75;\r\n    padding-left: 0;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n\r\n    @media (max-width: 480px) {\r\n            flex-direction: column;\r\n            align-items: center;\r\n    }\r\n`;\r\n\r\nexport const ListLabel = styled.label`\r\n    width: 150px;\r\n    display: inline-block;\r\n    margin: 0 5px;\r\n`;\r\n\r\nexport const FormResult = styled.p`\r\n    margin-left: 20px;\r\n`;\r\n\r\nexport const FormAnnotation = styled.p`\r\n    font-size: 12px;\r\n    text-align: right;\r\n`;","import { useRef, useState } from \"react\";\r\nimport Clock from \"./Clock\";\r\nimport Buttons from \"./Buttons\";\r\nimport currencies from \"./currencies\";\r\nimport { Fieldset, Legend, InputLabel, InputLabelText, FormInput, List, ListItem, ListLabel, FormResult, FormAnnotation } from \"./styled\";\r\n\r\nconst Form = ({ title, inputTitle, listTitle, list, resultTitle, resultLabel, resultAnnotation, buttons }) => {\r\n    const [chosenCurrency, setChosenCurrency] = useState(\"EUR\");\r\n\r\n    const [newAmount, setNewAmount] = useState(\"\");\r\n\r\n    const [result, setResult] = useState([]);\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    const onCurrencyChange = ({ target }) => {\r\n        setChosenCurrency(target.value);\r\n    };\r\n\r\n    const getExchangeRate = () => {\r\n        return (currencies.find(({ id }) => id === chosenCurrency).rate);\r\n    };\r\n\r\n    const calculateResult = () => {\r\n        setResult([(newAmount / getExchangeRate()).toFixed(2), chosenCurrency]);\r\n    };\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        getExchangeRate();\r\n        calculateResult();\r\n        setNewAmount(\"\");\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    const onFormReset = (event) => {\r\n        event.preventDefault();\r\n\r\n        setNewAmount(\"\");\r\n        setResult(\"\");\r\n        setChosenCurrency(\"EUR\");\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onFormSubmit} onReset={onFormReset}>\r\n            <Fieldset>\r\n                <Legend>{inputTitle}</Legend>\r\n                <Clock />\r\n                <InputLabel>\r\n                    <InputLabelText>\r\n                        {title}\r\n                    </InputLabelText>\r\n                    <FormInput\r\n                        ref={inputRef}\r\n                        value={newAmount}\r\n                        placeholder=\"Kwota w PLN\"\r\n                        type=\"number\"\r\n                        min=\"0.01\"\r\n                        step=\"any\"\r\n                        required\r\n                        autoFocus\r\n                        onChange={({ target }) => setNewAmount(target.value)}\r\n                    />\r\n                </InputLabel>\r\n            </Fieldset>\r\n            <Fieldset>\r\n                <Legend>{listTitle}</Legend>\r\n                {\r\n                    <List>\r\n                        {currencies.map(currency => (\r\n                            <ListItem key={currency.id} >\r\n                                <div>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"chosenCurrency\"\r\n                                        id={currency.id}\r\n                                        value={currency.id}\r\n                                        checked={chosenCurrency === currency.id}\r\n                                        onChange={onCurrencyChange}\r\n                                    />\r\n                                    <ListLabel htmlFor={currency.id}>\r\n                                        {currency.label}\r\n                                    </ListLabel>\r\n                                </div>\r\n                                <FormInput\r\n                                    value={currency.rate.toFixed(4)}\r\n                                    type=\"number\"\r\n                                    min=\"0.0001\"\r\n                                    step=\"0.0001\"\r\n                                    required\r\n                                    readOnly\r\n                                />\r\n                            </ListItem>\r\n                        ))\r\n                        };\r\n                    </List>\r\n                }\r\n            </Fieldset>\r\n            <Fieldset>\r\n                <Legend>{resultTitle}</Legend>\r\n                <FormResult>\r\n                    {resultLabel}\r\n                    {result}\r\n                </FormResult>\r\n                <FormAnnotation>\r\n                    {resultAnnotation}\r\n                </FormAnnotation>\r\n                <Buttons />\r\n            </Fieldset>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Form;","import Container from \"./Container\";\nimport Form from \"./Form\";\n\nfunction App() {\n\n  return (\n    <Container>\n      <Form\n        inputTitle=\"e-kantor\"\n        title=\"Wpłacasz:\"\n        listTitle=\"Aktualny kurs\"\n        resultTitle=\"Otrzymana kwota\"\n        resultLabel=\"Dostajesz:\"\n        resultAnnotation=\"*wg kursu z dnia 24/06/2021\"\n      />\n    </Container>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}